#!/bin/bash

#################################################################################
# 
cp -f /etc/skel/.bashrc ~/.bashrc
systemctl set-default multi-user.target && systemctl default 
echo "UUID=27750376-fa26-4a71-9214-3c2bd2c8b65c /var/lib/libvirt btrfs default,noatime,nodiratime,space_cache,autodefrag,compress=lzo 0 0" >>/etc/fstab

#################################################################################
# 
sed -i 's/^#PermitRootLogin.*/PermitRootLogin prohibit-password/g' /etc/ssh/sshd_config
sed -i 's/^#ChallengeResponseAuthentication.*/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
ssh-import-id lp:katamo
sftp katamo@10.0.0.5
tar xvf myprecious-ssh.tar.xz 
rm myprecious-ssh.tar.xz 
chown root:root .ssh -R

#################################################################################
#
apt upgrade -y \
  && apt dist-upgrade -y \
  && apt autoremove -y
apt install -y lnav vim git neofetch glances tmux pastebinit htop
apt install -y openvswitch-switch lnav vim git
apt install -y lxd criu squashfuse zfsutils-linux btrfs-tools
apt install -y qemu qemu-kvm qemu-utils libvirt-bin libvirt0

#################################################################################
#
git clone git@github.com:KathrynMorgan/mini-stack.git ~/Git/mini-stack/
git config --global user.name katamo
git config --global user.email kat.morgan@braincraft.io

#################################################################################
#
cat <<EOF >/etc/netplan/80-mgmt0.yaml
# Configure mgmt0 on 'wan' bridge
# For more configuration examples, see: https://netplan.io/examples
network:
  version: 2
  renderer: networkd
  ethernets:
    mgmt0:
      dhcp4: true
EOF

cat <<EOF >/etc/systemd/network/eth0.network
[Match]
Name=eth0

[Network]
DHCP=no
IPv6AcceptRA=no
LinkLocalAddressing=no
EOF

cat <<EOF >/etc/systemd/network/wan.network                                                    
[Match]
Name=wan

[Network]
DHCP=no
IPv6AcceptRA=no
LinkLocalAddressing=no
EOF

cat <<EOF >/tmp/net_restart.sh
net_restart () {
HWADDRESS=$(echo "$HOSTNAME wan mgmt0" | md5sum | sed 's/^\(..\)\(..\)\(..\)\(..\)\(..\).*$/02\\:\1\\:\2\\:\3\\:\4\\:\5/')

ovs-vsctl \
  add-br wan -- \
  add-port wan eth0 -- \
  add-port wan mgmt0 -- \
  set interface mgmt0 type=internal -- \
  set interface mgmt0 mac="$HWADDRESS" \
  && unset $HWADDRESS

systemctl restart systemd-networkd.service && netplan apply --debug

ovs-vsctl show
}
net_restart
EOF

chmod +x /tmp/net_restart.sh && /bin/bash /tmp/net_restart.sh

#################################################################################
# 
wget -O /tmp/profile-cloudctl.yaml https://raw.githubusercontent.com/KathrynMorgan/mini-stack/master/7_Juju_MAAS_Cloud/profile-cloudctl.yaml
export maasctl_api_key=$(lxc exec maasctl -- maas-region apikey --username=admin)
lxc profile create cloudctl && lxc profile edit cloudctl < <(sed "s/maasctl_api_key/${maasctl_api_key}/g" profile-cloudctl.yaml)
lxc launch ubuntu:bionic cloudctl -p cloudctl 
lxc exec cloudctl bash
wget https://raw.githubusercontent.com/KathrynMorgan/mini-stack/master/2_LXD-On-OVS/lxd-init.yaml
vim lxd-init.yaml 
lxd init --preseed < lxd-init.yaml 
sudo usermod -aG lxd ubuntu
lxc remote add bcio https://images.braincraft.io --public --accept-certificate

#################################################################################
cat <<EOF > /etc/netplan/80-mgmt1.yaml
# Configure mgmt1 on 'lan' bridge
# For more configuration examples, see: https://netplan.io/examples
network:
  version: 2
  renderer: networkd
  ethernets:
    mgmt1:
      dhcp4: true
EOF

cat <<EOF > /etc/systemd/network/lan.network                                                    
[Match]
Name=lan

[Network]
DHCP=no
IPv6AcceptRA=no
LinkLocalAddressing=no
EOF

export HWADDRESS=$(echo "$HOSTNAME lan mgmt1" | md5sum | sed 's/^\(..\)\(..\)\(..\)\(..\)\(..\).*$/02\\:\1\\:\2\\:\3\\:\4\\:\5/')
ovs-vsctl add-br lan -- add-port lan mgmt1 -- set interface mgmt1 type=internal -- set interface mgmt1 mac="$HWADDRESS"
lxc profile copy default openwrt
lxc profile set openwrt security.privileged true
lxc profile device set openwrt eth0 parent wan
lxc profile device add openwrt eth1 nic nictype=bridged parent=lan
systemctl restart systemd-networkd.service
netplan apply --debug
lxc launch bcio:openwrt gateway -p openwrt
ip a
lxc list
vim /etc/netplan/80-mgmt0.yaml 
vim /etc/netplan/80-mgmt1.yaml 
lxc list
lxc exec gateway enable-webui-on-wan
ip a s mgmt0
lxc profile copy default wan
lxc profile device set default eth0 parent lan
lxc launch ubuntu: c02
lxc list
lxc restart c01
lxc list
lxc list
ip r
ip r del default via 10.0.0.1 dev wlps0
ip r del default via 10.0.0.1 dev wlp2s0
ip r del default via 10.0.0.1 dev mgmt0
apt update
ip r
lxc exec gateway ash
apt install -y qemu qemu-kvm qemu-utils libvirt-bin libvirt0
mkdir ~/bak && virsh net-dumpxml default | tee ~/bak/virsh-net-default-bak.xml
virsh net-destroy default && virsh net-undefine default
cat <<EOF >/tmp/virsh-net-default-on-lan.json
<network>
  <name>default</name>
  <forward mode='bridge'/>
  <bridge name='lan' />
  <virtualport type='openvswitch'/>
</network>
EOF

cat <<EOF >/tmp/virsh-net-lan-on-lan.json
<network>
  <name>lan</name>
  <forward mode='bridge'/>
  <bridge name='lan' />
  <virtualport type='openvswitch'/>
</network>
EOF

cat <<EOF >/tmp/virsh-net-wan-on-wan.json
<network>
  <name>wan</name>
  <forward mode='bridge'/>
  <bridge name='wan' />
  <virtualport type='openvswitch'/>
</network>
EOF

for i in virsh-net-default-on-lan.json virsh-net-lan-on-lan.json virsh-net-wan-on-wan.json; do virsh net-define /tmp/$i; done
for i in wan default lan; do virsh net-start $i; virsh net-autostart $i; done
sudo virsh net-list --all
lxc profile create maasctl
wget -O /tmp/profile-maasctl.yaml https://raw.githubusercontent.com/KathrynMorgan/mini-stack/master/5_MAAS-Rack_And_Region_Ctl-On-Open_vSwitch/profile-maasctl.yaml
lxc profile edit maasctl </tmp/profile-maasctl.yaml 
lxc profile edit maasctl 
lxc launch ubuntu:bionic maasctl -p maasctl
lxc exec maasctl -- tail -f /var/log/cloud-init-output.log
lxc list
vim 5_MAAS-Rack_And_Region_Ctl-On-Open_vSwitch/
lxc exec maasctl -- /bin/bash -c 'cat /var/lib/maas/.ssh/id_rsa.pub' >>~/.ssh/authorized_keys    
lxc exec maasctl -- su -l maas /bin/bash -c 'ssh-keyscan -H precision >>~/.ssh/known_hosts'
lxc exec maasctl -- su -l maas /bin/bash -c 'virsh -c qemu+ssh://root@precision/system list --all'
lxc exec maasctl -- su -l maas /bin/bash -c 'virsh -c qemu+ssh://root@precision.maas/system list --all'
vim 7_Juju_MAAS_Cloud/README.md 
vim 7_Juju_MAAS_Cloud/profile-cloudctl.yaml 
rm profile-cloudctl.yaml 
rm lxd-init.yaml 
vim 7_Juju_MAAS_Cloud/profile-cloudctl.yaml 
apt install neofetch
neofetch 
neofetch --help
neofetch --help | more
neofetch 
lxc list
lxc exec cloudctl bash
ip a s mgmt1
ip a s mgmt1
lxc exec gateway ash
netplan apply
lxc file push ./sftp-scripts.tar.xz cloudctl/root/
rm sftp-scripts.tar.xz 
lxc exec gateway bash
lxc exec gateway ash
lxc list
ip a s 
ip link set wlp2s0 down
lxc config device add gateway wlp2s0 nic nictype=physical parent=wlp2s0 name=wlp2s0
lxc start gateway 
lxc exec gateway ash
cd
systemctl status sshd
systemctl start sshd
systemctl start ssh
journalctl -xe
vim /etc/ssh/sshd_config 
systemctl start ssh
systemctl start sshd
glances
apt install glances -y
echo 'alias glances="glances 2>/dev/null"' >>.bashrc 
glances
source .bashrc 
GLANCES
glances
apt install tmux
tmux
glances
lxc list
lxc stop gateway
lxc start gateway
reboot
lxc list
lxc start gateway
lxc exec gateway ash
lxc snapshot gateway working+maas+squid+wpad
reboot
lxc exec gateway ash
lxc exec gateway ash
lxc list
lxc config device remove gateway wlp2s0
lxc stop gateway
history | grep wlp2s0
lxc config device add gateway wlp2s0 nic nictype=physical parent=wlp2s0 name=wlp2s0
lxc list
lxc start gateway 
reboot
lxc config set gateway linux.kernel_modules ath10k_pci,ath10k_core,ath,mac80211,cfg80211
lxc list
lxc stop gateway
lxc start gateway
lxc config set gateway security.privileged true
lxc config set gateway 
lxc config set gateway ash 
lxc list
lxc start gateway 
lxc exec gateway ash
virsh destroy xjs
virsh start xjs
lxc exec gateway ash
lxc list
ip a
lxc list
lxc exec cloudctl bash
lxc list
lxc start gateway 
lxc exec gateway ash
lxc exec gateway ash
ip a
ip a s wlp2s0
lxc list
lxc exec cloudctl bash
netplan apply
lxc exec cloudctl bash
virsh list
virsh console 5
juju status
virsh console 5
virsh list
lxc list
lxc exec gateway ash
vim /etc/netplan/80-mgmt0.yaml 
vim /etc/netplan/80-mgmt1.yaml 
vim /etc/netplan/01-network-manager-all.yaml 
lxc exec maasctl bash
lxc exec maasctl bash
cd Git/mini-stack/
cd 5_MAAS-Rack_And_Region_Ctl-On-Open_vSwitch/
mkdir aux
mv login maas-login aux/
cd aux/
lxc exec maasctl -- ls
lxc file pull maasctl/root/curtin_userdata
lxc file pull maasctl/root/curtin_userdata .
vim curtin_userdata 
vim 5_MAAS-Rack_And_Region_Ctl-On-Open_vSwitch/README.md 
vim 6_MAAS-Connect_POD_KVM-Provider/README.md 
vim 7_Juju_MAAS_Cloud/README.md 
git stage -A; git commit -m "tweaks"; git push origin master
glances 
/usr/bin/glances 2>/dev/null
cd mini-stack/
find ./ -name "*.tar*"
find ./ -name "*.xz*"
git pull
git diff
git diff >>~/mini-stack.diff
cat ~/mini-stack.diff 
git pull
rm 1_Single_Port_Host-Open_vSwitch_Network_Configuration/README.md 
rm 6_MAAS-Connect_POD_KVM-Provider/README.md 
rm 7_Juju_MAAS_Cloud/README.md 
git pull
lxc exec gateway ash
cd aux/
lxc file pull gateway/root/openwrt-testing.tar
lxc file pull gateway/root/openwrt-testing.tar .
git stage -A; git commit -m "testing"; git push origin master
git diff
git stage -A; git commit -m "testing"; git push origin master
lxc exec gateway ash
vim 7_Juju_MAAS_Cloud/README.md 
ovs-vsctl show
alias
ssh cjohnston@lds.chrisjohnston.org -p 2005
vim 1_Single_Port_Host-Open_vSwitch_Network_Configuration/netplan-blocking.yaml 
vim README.md 
vim 1_Single_Port_Host-Open_vSwitch_Network_Configuration/README.md 
vim 2_LXD-On-OVS/README.md 
vim 3_LXD_Network_Gateway/README.md 
vim 4_KVM_On_Open_vSwitch/README.md 
lxc exec maasctl bash
lxc list
lxc exec c02 bash
virsh console bionic
virsh console bionic
lxc exec maasctl bash
groups katamo
groups ubuntu
usermod -aG sudo ubuntu
lxc exec maasctl bash
virsh console bionic
lxc exec maasctl bash
cd Git/mini-stack/5_MAAS-Rack_And_Region_Ctl-On-Open_vSwitch/aux/
rm curtin_userdata 
lxc file pull maasctl/root/curtin_userdata .
git stage -A; git commit -m "tweaks"; git push origin master
cd
lxc list
lxc delete --force c01 c02
lxc list
virsh list --all
cd Git/mini-stack/7_Juju_MAAS_Cloud/
vim profile-cloudctl.yaml 
git stage -A; git commit -m "tweaks"; git push origin master
cd
whereis sudo
whereis usermod
virsh console bionic
lxc exec cloudctl bash
virsh console bionic
vim mini-stack.diff 
vim Git/mini-stack/6_MAAS-Connect_POD_KVM-Provider/
virsh list --all
ping https://192.168.1.6:17070/gui/u/admin/openstack
ping 192.168.1.6
vim /etc/default/grub 
/sys/module/kvm_intel/parameters/nested
cat /sys/module/kvm_intel/parameters/nested
modinfo kvm_intel | grep nested
watch -c virsh list --all
virt-install --help
virt-install --help | more
watch -c virsh list --all
virt-install --help | more
virt-install --help | grep location
virt-install --option=location
man virt-install 
watch -c virsh list --all
lxc exec maasctl bash
ip a s mgmt1
lxc list
lxc exec gateway ash
lxc exec gateway -- cat pastebinit | pastebinit
apt install pastebinit
lxc exec gateway -- cat pastebinit | pastebinit
cd mini-stack/
git pull
mv 7_Juju_MAAS_Cloud/ 8_Juju_MAAS_Cloud
mkdir 7_Add_LXD_KVM_Node
vim 7_Add_LXD_KVM_Node/README.md
git stage -A; git commit -m "tweaks"; git push origin master
cat /etc/netplan/
cat /etc/netplan/01-network-manager-all.yaml 
lxc list
lxc restart gateway
lxc config device remove gateway wlp2s0
lxc start gateway
lxc list
lxc restart cloudctl 
lxc restart maasctl
lxc list
ovs-vsctl show
for i in $(ovs-vsctl show | awk '/could not open network device /{print $7}'); do ovs-vsctl del-port $i; done && clear && ovs-vsctl show
vim ~/.ovs-clear
chmod +x ~/.ovs-clear 
lxc list
lxc start maasctl
lxc launch ubuntu: c01
lxc exec c01 bash
mkdir 9_OpenStack_Prep
cd 9_OpenStack_Prep/
lxc exec maasctl bash
virsh console stack-01
cat /sys/module/kvm_intel/parameters/enable_shadow_vmcs 
cat /sys/module/kvm_intel/parameters/nested
vim /etc/modprobe.d/kvm_nested.conf
./virtinst01 
apt-get install virt-install
apt-cache search virtinstall
apt-cache search virt | grep instal
apt-get install virtinst
./virtinst01 
vim virtinst01 
./virtinst01 
virt-install --pxe --hvm --noreboot --graphics none --os-type=Linux --vcpus 2 --memory 2048 --name stack-01 --cpu host-passthrough --os-variant=ubuntu18.04 --boot network,hd,useserial=on --console pty,target_type=virtio --description 'Juju MAAS Cloud OpenStack Dev Host' --network 'network=lan,model=virtio,mac=02\:90\:d2\:df\:45\:1c' --network 'network=lan,model=virtio,mac=02\:90\:d2\:df\:45\:1c' —extra-args 'console=tty0 console=ttyS0,115200n8 net.ifnames=0' —disk path=/var/lib/libvirt/images/stack-01_vda.qcow2,format=qcow2,bus=virtio,cache=unsafe,size=16 —disk path=/var/lib/libvirt/images/stack-01_vdb.qcow2,format=qcow2,bus=virtio,cache=unsafe,size=16
vim test
source test 
chmod +x test 
./test 
vim test
./test 
vim test
./test 
vim test; ./test 
cat virtinst01 | pastebinit
vim virtinst01 
./virtinst01 
vim virtinst01 
vim virtinst01 
virsh start stack-01
virsh console stack-01
mkdir Downloads
cd Downloads/
virsh dumpxml >bionic.xml

lxc profile edit default
update-alternatives editor
update-alternatives --set editor
update-alternatives --set editor vim.basic
update-alternatives --set editor /usr/bin/vim
update-alternatives --set editor /usr/bin/vim.basic 
lxc profile edit default
lxc delete --force c01
lxc launch ubuntu: c01
lxc exec c01 bash
lxc delete --force c01
lxc profile edit default
lxc profile show default 
lxc profile edit default
lxc profile show default >>default
vim default 
mv default default.yaml
vim default.yaml 
lxc profile edit default  < default.yaml 
lxc profile show default 
lxc profile create test
lxc profile edit test  < default.yaml 
lxc profile show test
vim default.yaml 
lxc profile edit test  < default.yaml 
lxc profile edit test  < default.yaml && lxc profile show test
vim edit default.yaml && lxc profile edit test  < default.yaml && lxc profile show test
vim default.yaml && lxc profile edit test  < default.yaml && lxc profile show test
vim default.yaml && lxc profile edit test  < default.yaml && lxc profile show test
lxc profile edit test 
lxc profile show test 
vim test 
vim default.yaml 
vim default.yaml && lxc profile edit test  < default.yaml && lxc profile show test
lxc profile show test
cat default.yaml 
lxc profile edit default
lxc profile show default
lxc profile edit default
lxc profile show default
lxc profile edit default
lxc profile edit default
lxc list
lxc launch ubuntu: c01
lxc profile edit default
lxc list
lxc delete --force c01
lxc launch ubuntu: c01
lxc exec c01 bash
lxc exec c01 
lxc exec c01 bash
lxc exec maasctl 
lxc exec maasctl bash
lxc list
lxc exec cloudctl bash
reboot
lxc exec maasctl bash
lxc exec maasctl bash
vim virtinst01 
./virtinst01 
cat test 
tmux
virsh list --all
glances
virsh list --all
cler
lxc exec maasctl bash
lxc snapshot maasctl pre-upgrade-2.5
lxc exec maasctl bash
virsh console pod
cat /etc/default/grub 
ping lds.chrisjohnston.org
virsh console jujuctl
virsh list --all
virsh console jujuctl-01
cat virtinst01 | pastebinit
lxc list
lxc exec maasctl 
lxc exec maasctl  bash
ip a
virsh list --all
virsh console bionic
virsh console stack-01
virsh list --all
ip a s mgmt1
lxc exec maasctl bash
chmod +x iface-add.sh 
./iface-add.sh 
virsh attach-device --help
./iface-add.sh 
virsh list --all | grep {04...12}
virsh list --all | awk -F: '{ if($4=="1-10") print $1}'
virsh list --all | awk -F: '{ if($4=="1-10") print $1 $2 $3 $4}'
virsh list --all | awk '{print $1 $2 $3 $4}'
virsh list --all | awk '{print $1 $2 $3}'
virsh list --all | awk '{print $1 $2}'
virsh list --all | awk '{print $2}'
virsh list --all | awk '{print $2}'
virsh list --all | awk -F: '{ if($2=="1-10") print $2}'
virsh list --all | awk -F: '{ if($2=="01-10") print $2}'
virsh list --all | awk '{print $2}'
virsh list --all | awk -F'[-]' '{print $2}'
virsh list --all | awk -F'[-]' '{print $3}'
virsh list --all | awk -F'[-]' '{ if ($3 >= 04 && $3 <= 12) print $3}'
virsh list --all | awk -F'[-]' '{ if ($3 >= 04) print $3}'
virsh list --all | awk -F'[-]' '{ if ($3 >= 04) print $3 }'
virsh list --all | awk -F'[-]' '$3 ~ /^0-1$|^10$/{print $3 }'
virsh list --all | awk -F'[-]' '$3 ~ /^0-1$|^10$/{print $3 $2 $1}'
virsh list --all | awk -F'[-]' '{print $3}'
virsh list --all | awk -F'[-]' '{print $2}'
virsh list --all | awk -F'[-]' '{print $3}'
virsh list --all | awk -F'[-]' '{print $1}'
virsh list --all | awk -F'[-]' '{print $4}'
virsh list --all | awk -F'[-]' '{print $3}'
virsh list --all | awk -F'[-]' '/stack/{print $3}'
virsh list --all | awk -F'[-]' '/stack/{print $3}'
virsh --help | grep device
virsh attach-device --help | grep device
virsh attach-device --help | grep device
virsh attach-device --help
virsh attach-device --help
source iface-add.sh 
cat /tmp/clear
source iface-add.sh 
unset x
vim /tmp/stack-04-lan.xml
bash
apt install htop
lxc exec gateway -- /etc/init.d/dnsmasq reload
lxc exec gateway -- /etc/init.d/dnsmasq restart
virsh console stack-04
virsh list 
virsh console stack-05
virsh console stack-06
virsh console stack-06clear
lxc restart gateway
lxc file push ./admin-openrc.sh cloudctl/root/
lxc file push admin-openrc.sh cloudctl/root/
lxc file push /etc/apt/sources.list cloudctl/etc/apt/sources.list
lxc file push admin-openrc.sh cloudctl/root/
rm admin-openrc.sh 
lxc file push adminrc2.sh cloudctl/root/
lxc file push adminrc3.sh cloudctl/root/
lxc exec maasctl bash
ip a
ip a s mgmt0
lxc exec maasctl bash
ip a s mgmt0
ip a s mgmt1
lxc exec maasctl bash
cp /var/lib/libvirt/images/stack-03_vdb.qcow2 /var/lib/libvirt/images/stack-04_vdb.qcow2
cd
ip a
ip link set wan up
ip link set lan up
netplan apply
vim /etc/netplan/80-mgmt0.yaml 
vim /etc/netplan/80-mgmt1.yaml 
netplan apply
systemctl restart systemd-networkd
ip a
lnav
vim test 
./virtinst01 
vim test 
./virtinst01 
vim ./virtinst01 
./virtinst01 
vim ./virtinst01 
vim ./virtinst01 
./virtinst01 
virsh list
virsh destroy stack-osd-01 && virsh undefine stack-osd-01
virsh list --all
vim ./virtinst01 
./virtinst01 
vim ./virtinst01 
vim virtinst01 
./virtinst01 
watch -c virsh list --all
virsh list 
virsh list --all
virsh destroy stack-01
virsh destroy stack-02
virsh undefine stack-01
virsh undefine stack-02
rm -rf /var/lib/libvirt/images/stack-0*
virsh console stack-osd-01
virsh console stack-osd-02
virsh list --all
virsh list --all
virsh undefine stack-osd-01
rm -rf /var/lib/libvirt/images/stack-osd-01_vd*
virsh console stack-osd-03
lxc exec maasctl bash
lxc exec maasctl bash
lxc exec maasctl bash
vim virtinst01 
./virtinst01 
./virtinst01 
vim virtinst01 
virsh list --all
virsh console stack-01
vim virtinst01 
./virtinst01 1 jujuctl
vim virtinst01 
./virtinst01 1 jujuctl
./virtinst01 ls
vim virtinst01 
vim ./virtinst01 
./virtinst01 8 stack
vim ./virtinst01 
./virtinst01 12 stack
virsh list --all
for i in $(virsh list | awk '/stack/{print $2}'); echo $i; done
for i in $(virsh list | awk '/stack/{print $2}'); do echo $i; done
virsh list --all
for i in $(virsh list --all | awk '/stack/{print $2}'); do echo $i; done
for i in $(virsh list | awk '/stack/{print $2}'); do echo $i; done
virsh list --all
for i in $(virsh list | awk '/stack/{print $2}'); do echo $i; done
virsh domiflist stack-04
for i in $(virsh list | awk '/stack/{print $2}'); do virsh domiflist $i; done
for i in $(virsh list | awk '/stack/{print $2}'); do echo $i; done
for i in $(virsh list --all | awk '/stack/{print $2}'); do virsh domiflist $i; done
for i in $(virsh list --all | awk '/stack/{print $2}'); do virsh domiflist $i; done
fclear
virsh list
virsh dumpxml >>iface-add.sh
virsh dumpxml stack-12 >>iface-add.sh
vim iface-add.sh 
lxc list
lxc stop maasctl; lxc stop cloudctl; lxc stop gateay; lxc stop c01
lxc list
lxc stop gateway
lxc list
virsh list --all
virsh stop jujuctl
virsh shutdown jujuctl
ovs-vsctl show
alias
ovs-vsctl del-port vethDLU75J -- del-port veth042K41
ovs-vsctl del-port vethDLU75J -- del-port vethO42K41 -- veth4VY5SA
ovs-vsctl show
ovs-vsctl del-port vethDLU75J
ovs-vsctl del-port vethO42K41
ovs-vsctl del-port veth4VY5SA
reboot
lxc list
apt-get update && apt-get upgrade 
lxc list
lxc start gateway; sleep 10; lxc start maasctl; sleep 15; lxc start cloudctl
virsh start jujuctl
lxc list
lxc delete --force c01
lxc exec maasctl bash
lxc stop gateway
lxc start gateway
lxc list
lxc start maasctl
virsh list --all
lxc list
cleawr
celar
bastion
lxc list
lxc restart gateway
lxc restart maasctl
lxc start maasctl
lxc list
cloudctl
bastion
virsh start stack-01
cp /var/lib/libvirt/images/stack-01_vdb.qcow2 /var/lib/libvirt/images/stack-01_vda.qcow2 -f
file Downloads/bionic.xml 
top
ip a s mgmt1
