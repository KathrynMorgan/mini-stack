#!/bin/bash 

run_maas_login () {
login-maas-cli
[[ $? == "0" ]] || echo "Login Failed"
}

find_maas_rack_id () {
primary_RACK=$(maas admin rack-controllers read \
                                | jq ".[] | {system_id:.system_id}" \
                                | awk -F'[",]' '/system_id/{print $4}' \
              )
}

run_maas_setup () {
maas admin maas set-config name=maas_name value=maasctl
maas admin maas set-config name=upstream_dns value=8.8.8.8
maas admin maas set-config name=enable_third_party_drivers value=true
maas admin maas set-config name=disk_erase_with_secure_erase value=false
maas admin tag update virtual kernel_opts='debug console=ttyS0,38400n8 console=tty0'
maas admin maas set-config name=kernel_opts value='debug console=ttyS0,38400n8 console=tty0'
maas admin fabric update 0 name=lan-ovs-bridge
maas admin spaces create name=lan
maas admin subnet update 1 name=untagged-lan gateway_ip="192.168.1.1" dns_servers="192.168.1.10"
maas admin ipranges create type=dynamic start_ip=192.168.1.100 end_ip=192.168.1.240
maas admin vlan update lan-ovs-bridge 0 name=lan space=lan
maas admin vlan update lan-ovs-bridge untagged dhcp_on=True primary_rack=${primary_RACK}
}
set -x

run_maas_login
find_maas_rack_id
run_maas_setup

rm /usr/bin/run_maas_setup
echo "Finished run_maas_setup at $(date)"

#################################################################################
# WIP
#maas admin pods create type=virsh name=mini-stack.maas power_address=qemu+ssh://root@mini-stack/system cpu_over_commit_ratio=10 memory_over_commit_ratio=10
#maas admin dnsresource-records update name=mini-stack domain=maas rrdata=192.168.1.2 rrtype=cname ip_addresses=192.168.1.2
#maas admin devices create hostname=mini-stack domain=maas mac_addresses=02:17:77:61:55:7b ip_addresses=192.168.1.2 ip_address=192.168.1.2
