# On a Windows 2016 Server with secondary NIC dedicated to Hyper-V Network Switch
# Download Windows ISO to target dir & Mount (Note mount path, IE: 'E:')
# Download virtio iso disk and save to C:\images\virtio.iso
# Download/extract all auxilary drivers & save to C:\drivers\ for recursive installation

# Setup Hyper-V
Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All -NoRestart
Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-Management-PowerShell -All -NoRestart
> Create a bridge with internet access named "external"

# Add Chocolatey via Admin powershell
Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

# Add GIT via Chocolatey (In Admin CMD Prompt)
`choco install git -params '"/GitAndUnixToolsOnPath"'`
`choco install notepadplusplus`
`choco install windows-adk-all`

# OPTIONAL: Install VirtIO Drivers if building inside a libvirt VM
`choco install virtio-drivers`

# Add the Hyper-V Server Role/App TODO: << what does this mean?
# Reboot


# In Admin PowerShell
> git clone https://github.com/cloudbase/windows-openstack-imaging-tools c:\cloudbase
> chdir c:\cloudbase
> git submodule update --init
> import-module .\Config.psm1
> Get-Module
> mkdir C:\cloudbase\base
> mkdir C:\cloudbase\images
> mkdir C:\cloudbase\drivers
> mkdir C:\cloudbase\maas
> Import-Module .\WinImageBuilder.psm1
> New-WindowsImageConfig  -ConfigFilePath "C:\cloudbase\maas\ms2019_maas_img.ini"
> notepad++ c:\cloudbase\maas\ms2019_maas_img.ini
>> 1. set source windows image drive path on line #3
>>>> wim_file_path = "E:\Sources\install.wim"
>> 2. Find & set image_name
>>>> 2.A ) Get-WimFileImagesInfo -WimFilePath E:\Sources\install.wim
>>>> 2.B ) Set image_name on line 7 eg: "image_name=Windows Server 2019 SERVERSTANDARD"
>> 3. Set image build file path+name on line 9 eg: "image_path=C:\cloudbase\images\ms2019_maas_img-tar-gz"
>> 4. Set disk format type on line 11 eg: "RAW"
>> 5. Set image build type line 18 eg: "image_type=MAAS"
>> 6. Enable maas hooks if building image for MAAS
>> 7. Enable Administrator Account line 64 if desired
>> 7. Set administrator password L85
>> 8. Set cpu count L91 eg: 6
>> 9. Set RAM size L93 eg: 8GB = 8589934592 (or 1GB = 1073741824)
>> 10. Set disk size L95 eg: 64GB = 68719476736
>> 11. Copy all drivers & virtio drivers from the virtio.iso or tarball to c:\cloudbase\drivers
>> 12. Set additional drivers path L103 eg: c:\cloudbase\drivers
>> 13. Enable windows updates L106
>> 14. Enable purge windows updates (makes image smaller, note rollback impossible) L109
>> 14. Disable persistent drivers unless all hardware image will be deployed on matches hardware image will be generated on
>> 15. Save the file
> get-module
> New-WindowsOnlineImage -ConfigFilePath "C:\cloudbase\maas\ms2019_maas_img.ini"
> upload it to the maas Server
> tar -zcvf ms2019-cloudbase-maas-img-tgz.img.tar.gz ms2019-cloudbase-maas-img-tgz.img
> mv ms2019-cloudbase-maas-img-tgz.img.tar.gz ms2019-cloudbase-maas-img-tgz
> maas admin boot-resources create name=windows/win2019 architecture=amd64/generic filetype=ddtgz content@=./ms2019-cloudbase-maas-img-tgz

